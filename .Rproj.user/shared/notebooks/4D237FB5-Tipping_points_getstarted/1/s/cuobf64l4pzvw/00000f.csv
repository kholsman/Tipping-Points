"0",""
"0","  # pre-allocate 'NA' Matrix"
"0","  # ------------------------------------"
"0",""
"0","  # TIP: 'boot_nobsIN' is specified in R/setup.R as 1000"
"0","  # boot_nobsIN <- 500 # uncomment this line if the code is slow"
"0","    "
"0","  # pre allocate NA Matrix"
"0","    Deriv1 <- "
"0","    Deriv2 <- "
"0","    hatFit <- "
"0","    hatse  <- matrix(NA,boot_nobsIN,length(x))"
"0","    gmlist <- list()"
"0","    "
"0","  # set bootstrap iterations to boot_nobsIN    "
"0","    boot_n    <- boot_nobsIN # number of bootstrap runs"
"0","    boot_nobs <- boot_nobsIN # optional subsample, if boot_nobs > sample nobs, is set = sample nobs"
"0","    knotsIN   <- t_knots # number of knots, set to 4 in Holsman et al. 2020"
"0","    "
"0","    sdmult    <- 1 # 1 sd"
"0","    method    <- methodIN  # Holsman et al. 2020 used method 2"
"0","    probIN    <- c(.025,.5,.975) # probablities for the quantile ranges"
"0","    spanIN    <- span_set  # default set to 0.1"
"0","    "
"0","  # Run the boot strap"
"0","  # ------------------------------------"
"0","  pb <- progress_bar$new(total = boot_n)"
"0","  for(int in 1:boot_n){"
"0","     pb$tick()"
"0","    # get bootstraped sub-sample"
"0","    nobs          <- length(dd$num)"
"0","    if(boot_nobs > nobs) "
"0","      boot_nobs   <- nobs"
"0","    "
"0","    bootd         <- sample_n(dd,boot_nobs,replace = TRUE)"
"0","    tmpgam        <- gam(delta_var_prcnt~s(TempC,k=knotsIN,bs=""tp""),data = bootd)"
"0","    tmpd          <- deriv2(tmpgam,simdat=x)"
"0","    gmlist[[int]] <- tmpgam"
"0","    Deriv1[int,]  <- tmpd$fd_d1"
"0","    Deriv2[int,]  <- tmpd$fd_d2"
"0","    hatFit[int,]  <- predict(tmpgam,se.fit=TRUE,newdata=data.frame(TempC=x))$fit"
"0","    hatse[int,]   <- predict(tmpgam,se.fit=TRUE,newdata=data.frame(TempC=x))$se"
"0","    "
"0","  }"
"0","  "
"0","    "
