"0","  "
"0","  # first derivative quantiles"
"0","  df1_qnt<-data.frame(tmp = x,"
"0","                      up  = D1_se[3,],"
"0","                      mn  = D1_se[2,],"
"0","                      dwn = D1_se[1,])"
"0","  "
"0","  # second derivative quantiles"
"0","  df2_qnt<-data.frame(tmp = x,"
"0","                      up  = D2_se[3,],"
"0","                      mn  = D2_se[2,],"
"0","                      dwn = D2_se[1,])"
"0","  "
"0",""
"0","  # get difference in signs"
"0","  getdelta<-function(xx,rnd = rndN2){"
"0","    nn        <- length(xx)"
"0","    xx        <- round(xx,rndN2)"
"0","    delta     <- rep(NA,nn)"
"0","    updn      <- c(0, diff(sign(xx)))"
"0","    #updn[xx==0]<-0"
"0","    ix        <- which(updn != 0)"
"0","    #(xx[ix] + xx[ix-1])/2"
"0","    sign(updn)[ix]"
"0","    delta[ix] <- 1"
"0","    return(list(delta=delta,ix=ix,updn=updn,xx=xx))"
"0","  }"
"0","  "
"0","  "
"0","  # determine peaks and valleys:"
"0","  # 10% smoothing span"
"0","  df1_qnt$smoothed_mn  <- predict(loess(mn  ~ tmp, data=df1_qnt, span=spanIN)) "
"0","  df1_qnt$smoothed_dwn <- predict(loess(dwn ~ tmp, data=df1_qnt, span=spanIN)) "
"0","  df1_qnt$smoothed_up  <- predict(loess(up  ~ tmp, data=df1_qnt, span=spanIN)) "
"0","  "
"0","  "
"0","  ggplot(rbind("
"0","    hat_qnt%>%select(TempC = tmp,up=smoothed_up, mn=smoothed_mn, dwn=smoothed_dwn)%>%mutate(method=""a) smoothed gam (s(x))""),"
"0","    df1_qnt%>%select(TempC = tmp,up=smoothed_up, mn=smoothed_mn, dwn=smoothed_dwn)%>%mutate(method=""b) First Deriv (s'(x)"")))+"
"0","  geom_ribbon(aes(x=TempC, ymin=dwn, ymax=up,fill=method))+facet_grid(method~.,scales=""free_y"")+"
"0","  scale_fill_viridis_d(begin = .8, end=.1)+"
"0","  theme_minimal()"
